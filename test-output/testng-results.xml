<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-12-29T10:53:20 IST" name="Default suite" finished-at="2022-12-29T10:53:33 IST" duration-ms="13180">
    <groups>
    </groups>
    <test started-at="2022-12-29T10:53:20 IST" name="Default test" finished-at="2022-12-29T10:53:33 IST" duration-ms="13180">
      <class name="tests.TC_Purplle_002">
        <test-method is-config="true" signature="staringServer()[pri:0, instance:tests.TC_Purplle_002@2e48362c]" started-at="2022-12-29T10:53:19 IST" name="staringServer" finished-at="2022-12-29T10:53:20 IST" duration-ms="1100" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- staringServer -->
        <test-method is-config="true" signature="openApp()[pri:0, instance:tests.TC_Purplle_002@2e48362c]" started-at="2022-12-29T10:53:20 IST" name="openApp" finished-at="2022-12-29T10:53:20 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openApp -->
        <test-method is-config="true" signature="loginApp()[pri:0, instance:tests.TC_Purplle_002@2e48362c]" started-at="2022-12-29T10:53:20 IST" name="loginApp" finished-at="2022-12-29T10:53:28 IST" duration-ms="7182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginApp -->
        <test-method signature="addProductToCartTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:tests.TC_Purplle_002@2e48362c]" started-at="2022-12-29T10:53:28 IST" name="addProductToCartTest" data-provider="ReadVariant2" finished-at="2022-12-29T10:53:28 IST" duration-ms="84" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[Skin Care]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Moisturizers]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[Face Moisturizers & Day Creams]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Good Vibes]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[Good Vibes Rosehip Moisture Rich Face Cream | Lightening, Nourishing | With Jojoba Oil | No Parabens, No Sulphates, No Mineral Oil (50 g)]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[Skin Care]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Moisturizers]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[Serums & Essences]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[Good Vibes]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Good Vibes Vitamin C & B3 Skin Glow Face Serum | With Orange | Easy Absorption | No Parabens, No Silicones, No Sulphates, No Animal Testing (10 ml)]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.NoSuchMethodException: jdk.proxy2.$Proxy23.proxyClassLookup()]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.NoSuchMethodException: jdk.proxy2.$Proxy23.proxyClassLookup()
at io.appium.java_client.pagefactory.bys.builder.AppiumByBuilder.prepareAnnotationMethods(AppiumByBuilder.java:84)
at io.appium.java_client.pagefactory.bys.builder.AppiumByBuilder.getFilledValue(AppiumByBuilder.java:91)
at io.appium.java_client.pagefactory.bys.builder.AppiumByBuilder.createBy(AppiumByBuilder.java:147)
at io.appium.java_client.pagefactory.DefaultElementByBuilder.getBys(DefaultElementByBuilder.java:133)
at io.appium.java_client.pagefactory.DefaultElementByBuilder.buildMobileNativeBy(DefaultElementByBuilder.java:170)
at io.appium.java_client.pagefactory.DefaultElementByBuilder.buildBy(DefaultElementByBuilder.java:204)
at io.appium.java_client.pagefactory.AppiumElementLocatorFactory.createLocator(AppiumElementLocatorFactory.java:66)
at io.appium.java_client.pagefactory.AppiumElementLocatorFactory.createLocator(AppiumElementLocatorFactory.java:53)
at io.appium.java_client.pagefactory.AppiumElementLocatorFactory.createLocator(AppiumElementLocatorFactory.java:1)
at org.openqa.selenium.support.pagefactory.DefaultFieldDecorator.decorate(DefaultFieldDecorator.java:56)
at io.appium.java_client.pagefactory.AppiumFieldDecorator.decorate(AppiumFieldDecorator.java:160)
at org.openqa.selenium.support.PageFactory.proxyFields(PageFactory.java:113)
at org.openqa.selenium.support.PageFactory.initElements(PageFactory.java:105)
at pages.HomePage.<init>(HomePage.java:26)
at tests.TC_Purplle_002.addProductToCartTest(TC_Purplle_002.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:577)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:132)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:599)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:174)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:822)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:147)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:764)
at org.testng.TestRunner.run(TestRunner.java:585)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1218)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
at org.testng.TestNG.runSuites(TestNG.java:1069)
at org.testng.TestNG.run(TestNG.java:1037)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.NoSuchMethodException: jdk.proxy2.$Proxy23.proxyClassLookup()
at java.base/java.lang.Class.getMethod(Class.java:2259)
at io.appium.java_client.pagefactory.bys.builder.AppiumByBuilder.prepareAnnotationMethods(AppiumByBuilder.java:82)
... 40 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addProductToCartTest -->
        <test-method is-config="true" signature="logoutApp()[pri:0, instance:tests.TC_Purplle_002@2e48362c]" started-at="2022-12-29T10:53:28 IST" name="logoutApp" finished-at="2022-12-29T10:53:28 IST" duration-ms="223" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutApp -->
        <test-method is-config="true" signature="closeApp()[pri:0, instance:tests.TC_Purplle_002@2e48362c]" started-at="2022-12-29T10:53:28 IST" name="closeApp" finished-at="2022-12-29T10:53:33 IST" duration-ms="5005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeApp -->
        <test-method is-config="true" signature="stopingServer()[pri:0, instance:tests.TC_Purplle_002@2e48362c]" started-at="2022-12-29T10:53:33 IST" name="stopingServer" finished-at="2022-12-29T10:53:33 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- stopingServer -->
      </class> <!-- tests.TC_Purplle_002 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
